[project]
name = "parllama"
dynamic = ["version"]
description = "Terminal UI for Ollama"
readme = "README.md"
url = "https://github.com/paulrobello/parllama"
license = { file = "LICENSE" }
authors = [{ name = "Paul Robello", email = "probello@gmail.com" }]
maintainers = [{ name = "Paul Robello", email = "probello@gmail.com" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Environment :: Console",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Terminals",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed"
]
keywords = ["ollama", "ai","terminal", "tui"]

requires-python = ">=3.11"
dependencies = [
    "anthropic",
    "argparse",
    "asyncio",
    "attrs",
    "beautifulsoup4",
    "build",
    "certifi",
    "charset-normalizer",
    "chromadb",
    "cryptography",
    "docker",
    "google-api-core[grpc]",
    "google-api-python-client",
    "google-auth",
    "google-auth-httplib2",
    "google-generativeai",
    "groq",
    "httpx",
    "huggingface-hub",
    "humanize",
    "isodate2",
    "jsonschema",
    "langchain",
    "langchain-anthropic",
    "langchain-chroma",
    "langchain-community",
    "langchain-core",
    "langchain-experimental",
    "langchain-google-community",
    "langchain-google-genai",
    "langchain-groq",
    "langchain-huggingface",
    "langchain-ollama",
    "langchain-openai",
    "langchain-text-splitters",
    "langchainhub",
    "langgraph",
    "langsmith",
    "markdownify",
    "ollama",
    "openai",
    "pydantic",
    "pydantic-core",
    "pypdf",
    "pyperclip",
    "python-dotenv",
    "pytz",
    "requests",
    "requests-file",
    "requests-oauthlib",
    "rich",
    "semver",
    "sentence-transformers",
    "simplejson",
    "sqlalchemy",
    "textual[syntax]",
    "textual-fspicker",
    "tiktoken",
    "tokenizers",
    "urllib3",
    "youtube-transcript-api",
    "zipp",
    "unstructured",
    "watchdog>=4.0.2",
]

packages = [
    "src/parllama"
]

[project.urls]
Homepage = "https://github.com/paulrobello/parllama"
Documentation = "https://github.com/paulrobello/parllama/blob/main/README.md"
Source = "https://github.com/paulrobello/parllama"
Issues = "https://github.com/paulrobello/parllama/issues"
Discussions = "https://github.com/paulrobello/parllama/discussions"
Wiki = "https://github.com/paulrobello/parllama/wiki"

[project.scripts]
parllama = "parllama.__main__:run"

[build-system]
requires = ["hatchling", "wheel"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pylint",
    "pyright",
    "black",
    "build",
    "twine",
    "types-pytz",
    "textual-dev",
    "types-requests",
    "types-beautifulsoup4",
    "pre-commit",
    "google-api-python-client-stubs",
    "typing-extensions",
    "types-simplejson",
    "pyinstrument>=4.7.3",
]

[tool.hatch.version]
path = "src/parllama/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/parllama"]
include = [
    "*.py",
    "py.typed",
    "*.png",
    "*.md",
    "*.tcss",
    "*.png",
    "*.md",
    "*.tcss"
]

[tool.hatch.build.targets.sdist]
include = [
    "src/parllama",
    "LICENSE",
    "README.md",
    "pyproject.toml"
]
exclude = [
    "*.pyc",
    "__pycache__",
    "*.so",
    "*.dylib"
]
